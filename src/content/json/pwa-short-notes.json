{"layout":"post","title":"PWA development: short notes","date":"2019-08-03 03:14","tags":["javascript","pwa"],"body":"<h1 id=\"i-setup\">I. Setup</h1>\n<h2 id=\"openssl\">OpenSSL</h2>\n<p>Windows Download Page:\nhttps://slproweb.com/products/Win32OpenSSL.html</p>\n<p>General troubleshooting:\nhttps://stackoverflow.com/questions/7580508/getting-chrome-to-accept-self-signed-localhost-certificate/47646463#47646463</p>\n<p>Shell Commands:</p>\n<p><code>openssl genrsa -out rootCA.key 4096 openssl req -x509 -new -nodes -key rootCA.key -newkey rsa:4096 -sha256 -days 1024 -out rootCA.pem openssl req -new -newkey rsa:4096 -sha256 -nodes -keyout device.key -out device.csr openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 2000 -sha256 -extfile v3.ext</code></p>\n<p>v3.ext file:</p>\n<p><code>authorityKeyIdentifier=keyid,issuer basicConstraints=CA:FALSE keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment subjectAltName = @alt_names [alt_names] DNS.1 = localhost IP.1 = 192.168.0.2 IP.2 = 127.0.0.1</code></p>\n<h2 id=\"chrome\">Chrome</h2>\n<ul>\n<li>Certificate manipulations [install / accept]</li>\n</ul>\n<h2 id=\"gulp\">Gulp</h2>\n<p><code>javascript   /**    * WebServer    */   function webServer() {     connect.server({       host: &#39;0.0.0.0&#39;,       root: &#39;./html/&#39;,       port: 3000,       livereload: true,       https: {         key: fs.readFileSync(&#39;E:\\\\Server\\\\https\\\\server.key&#39;),         cert: fs.readFileSync(&#39;E:\\\\Server\\\\https\\\\server.crt&#39;)       }     });   } </code></p>\n<h2 id=\"vsc\">VSC</h2>\n<p>.vscode/settings.json</p>\n<p><code>json {   &quot;liveServer.settings.https&quot;: {   &quot;enable&quot;: true,   &quot;cert&quot;: &quot;E:\\\\Server\\\\https\\\\server.crt&quot;,   &quot;key&quot;: &quot;E:\\\\Server\\\\https\\\\server.key&quot;,   &quot;passphrase&quot;: &quot;https&quot;   } } </code></p>\n<h2 id=\"wamp--apache\">WAMP / Apache</h2>\n<p>httpd.conf:</p>\n<p><code>LoadModule ssl_module modules/mod_ssl.so Include conf/extra/httpd-ssl.conf LoadModule socache_shmcb_module modules/mod_socache_shmcb.so</code></p>\n<p>httpd-ssl.conf:</p>\n<p><code>SSLCertificateFile &quot;${SRVROOT}/conf/key/certificate.crt&quot; SSLCertificateKeyFile &quot;${SRVROOT}/conf/key/private.key&quot;</code></p>\n<h1 id=\"ii-scripts\">II. Scripts</h1>\n<h2 id=\"testing\">Testing</h2>\n<ul>\n<li>Chrome Lighthouse</li>\n<li>https://www.pwabuilder.com/</li>\n</ul>\n<h2 id=\"cache\">Cache</h2>\n<ul>\n<li>manifest</li>\n<li>install</li>\n<li>fetch</li>\n</ul>\n<h2 id=\"push-api\">Push API</h2>\n<ul>\n<li>https://www.izooto.com/how-web-push-api-works</li>\n<li>https://developers.google.com/web/fundamentals/codelabs/push-notifications/</li>\n<li>https://flaviocopes.com/push-api/</li>\n</ul>\n<h1 id=\"iv-information-resources\">IV. Information Resources</h1>\n<ul>\n<li>https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers</li>\n<li>https://serviceworke.rs/push-subscription-management_index_doc.html</li>\n<li>https://www.pwabuilder.com/serviceworker</li>\n<li>https://codelabs.developers.google.com/codelabs/your-first-pwapp/#0</li>\n<li>https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps</li>\n<li>https://vaadin.com/tutorials/learn-pwa/turn-website-into-a-pwa</li>\n</ul>\n","updatedAt":"2020-09-06T11:48:11.323Z"}